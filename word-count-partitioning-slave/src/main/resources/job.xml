<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		 http://www.springframework.org/schema/beans/spring-beans.xsd
		 http://www.springframework.org/schema/batch
		 http://www.springframework.org/schema/batch/spring-batch.xsd">

	<batch:step id="wordCount">
		<batch:tasklet>
			<batch:chunk reader="itemReader" processor="compositeItemProcessor"
				writer="wordCountWriter" commit-interval="1">
			</batch:chunk>
		</batch:tasklet>
	</batch:step>

	<batch:job-repository />

	<bean id="itemReader"
		class="org.springframework.batch.item.database.JdbcPagingItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="queryProvider">
			<bean
				class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
				<property name="dataSource" ref="dataSource" />
				<property name="selectClause" value="SELECT id, filepath" />
				<property name="fromClause" value="from pdf_files" />
				<property name="whereClause">
					<value>
						<![CDATA[
							where id >= :minValue and id <= :maxValue
						]]>
					</value>
				</property>
				<property name="sortKey" value="id" />
			</bean>
		</property>
		<property name="pageSize" value="5" />
		<property name="rowMapper">
			<bean class="org.springframework.jdbc.core.BeanPropertyRowMapper">
				<property name="mappedClass" value="com.mulodo.slave.pojo.FileInfo" />
			</bean>
		</property>
		<property name="parameterValues">
			<map>
				<entry key="minValue" value="#{stepExecutionContext[minValue]}" />
				<entry key="maxValue" value="#{stepExecutionContext[maxValue]}" />
			</map>
		</property>
	</bean>

	<bean id="compositeItemProcessor"
		class="org.springframework.batch.item.support.CompositeItemProcessor">
		<property name="delegates">
			<list>
				<ref bean="pdf2txtProcessor" />
				<ref bean="wordcountProcessor" />
			</list>
		</property>
	</bean>

	<bean id="pdf2txtProcessor" class="com.mulodo.slave.processor.Pdf2TxtItemProcessor">
		<property name="pdfDir" value="${processed.pdf.dir}" />
	</bean>

	<bean id="wordcountProcessor" class="com.mulodo.slave.processor.WordCountProcessor">
		<property name="delimiter" value="${delimiter}" />
	</bean>

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<bean id="stepExecutionRequestHandler"
		class="org.springframework.batch.integration.partition.StepExecutionRequestHandler">
		<property name="jobExplorer" ref="jobExplorer" />
		<property name="stepLocator" ref="stepLocator" />
	</bean>

	<bean id="jobExplorer"
		class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
		<property name="dataSource" ref="dataSourceJobRepo" />
	</bean>

	<bean id="stepLocator"
		class="org.springframework.batch.integration.partition.BeanFactoryStepLocator" />

	<bean id="wordCountWriter" class="com.mulodo.slave.writer.WordCountItemWriter">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSourceJobRepo" />
		<property name="transactionManager" ref="transactionManagerJobRepo" />
		<property name="databaseType" value="${batch.job_repo.databaseType}" />
	</bean>
</beans>
